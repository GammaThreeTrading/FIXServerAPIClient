/* 
 * FIXServer - API
 *
 * Open API for FIXServer integrations.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing NewOrderSingleApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class NewOrderSingleApiTests
    {
        private NewOrderSingleApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new NewOrderSingleApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of NewOrderSingleApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' NewOrderSingleApi
            //Assert.IsInstanceOfType(typeof(NewOrderSingleApi), instance, "instance is a NewOrderSingleApi");
        }

        /// <summary>
        /// Test V1NewOrderSingleInstanceSessionClordidDelete
        /// </summary>
        [Test]
        public void V1NewOrderSingleInstanceSessionClordidDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string instance = null;
            //string session = null;
            //string clordid = null;
            //instance.V1NewOrderSingleInstanceSessionClordidDelete(instance, session, clordid);
            
        }
        /// <summary>
        /// Test V1NewOrderSingleOrdersOutInstanceGet
        /// </summary>
        [Test]
        public void V1NewOrderSingleOrdersOutInstanceGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string instance = null;
            //var response = instance.V1NewOrderSingleOrdersOutInstanceGet(instance);
            //Assert.IsInstanceOf<List<NewOrderSingleDetails>> (response, "response is List<NewOrderSingleDetails>");
        }
        /// <summary>
        /// Test V1NewOrderSingleOrdersOutInstanceSessionGet
        /// </summary>
        [Test]
        public void V1NewOrderSingleOrdersOutInstanceSessionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string instance = null;
            //string session = null;
            //string orderstatus = null;
            //var response = instance.V1NewOrderSingleOrdersOutInstanceSessionGet(instance, session, orderstatus);
            //Assert.IsInstanceOf<List<NewOrderSingleDetails>> (response, "response is List<NewOrderSingleDetails>");
        }
        /// <summary>
        /// Test V1NewOrderSingleOrdersOutInstanceSessionPost
        /// </summary>
        [Test]
        public void V1NewOrderSingleOrdersOutInstanceSessionPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string instance = null;
            //string session = null;
            //NewOrderSingle body = null;
            //var response = instance.V1NewOrderSingleOrdersOutInstanceSessionPost(instance, session, body);
            //Assert.IsInstanceOf<NewOrderSingleDetails> (response, "response is NewOrderSingleDetails");
        }
    }

}
